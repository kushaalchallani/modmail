const db = require('quick.db')

class DiscordTicket {

    async setRole(message, role) {

        let content = {
            embed: {
              color: "#00ff00",
              title: "Ticket Role Set",
              description: `Ticket role set to ${role}`
            }
          };

        message.channel.send(content)
        
        db.delete(`ticketRole_${message.guild.id}`)
        db.set(`ticketRole_${message.guild.id}`, role)

        console.log(`${message.guild.name}'s ticket role is ${role.name}`)
    }

    async makeTicket(message, reason) {
        const ot = await db.fetch(`ticID_${message.author.id}`)
        const ticketRole = await db.fetch(`ticketRole_${message.guild.id}`)

        if (message.guild.channels.cache.find(c => c.id == ot)) {
            const channel = message.guild.channels.cache.find(c => c.id == ot)
            let content = {
                embed: {
                  color: "#ff0000",
                  title: "❌ | Open Ticket",
                  description: `You already have ${channel} open!`
                }
            }
        message.reply(content)
        } else {
            db.add(`ticketNumber_${message.guild.id}`, 1)

            const ticNum = await db.fetch(`ticketNumber_${message.guild.id}`)
            const ticName = `ticket-${ticNum}`

            message.guild.channels.create(ticName).then(chan => {
                db.set(`ticID_${message.author.id}`, chan.id)
                db.set(`open_${chan.id}`, "open")

                chan.updateOverwrite(message.guild.roles.everyone, {
                    SEND_MESSAGES: false,
                    VIEW_CHANNEL: false,
                    READ_MESSAGES: false
                })
                chan.updateOverwrite(message.author.id, {
                    SEND_MESSAGES: true,
                    VIEW_CHANNEL: true,
                    READ_MESSAGES: true
                })
                chan.updateOverwrite(ticketRole.id, {
                    SEND_MESSAGES: true,
                    VIEW_CHANNEL: true,
                    READ_MESSAGES: true
                })

                let content = {
                    embed: {
                      color: "#00ff00",
                      title: `Ticket #${ticNum} ${reason}`,
                      description: `Support will be here shortly ${message.author}.\nThe support team has been contacted!`
                    }
                }

                let content2 = {
                    embed: {
                      color: "#00ff00",
                      title: "Ticket",
                      description: `Ticket #${ticNum}\nI have created ${chan} for you!`
                    }
                }

                const ROLE = chan.guild.roles.cache.find(r => r.id == ticketRole.id || r.name == ticketRole.name)

                chan.send(`${ROLE}`, content)
                message.channel.send(content2)

                console.log(`Created ${chan.name} for ${message.guild.name}`)
            })
        }

    }

    async closeTicket(message, channel) {

        const ot = await db.fetch(`open_${channel.id}`)

        if (ot === "open") {
            channel.delete()

            message.channel.send(`I have closed ${channel}!`)
            console.log(`Closed ${channel} in ${message.guild.name}`)
        } else {
            return;
        }

    }

}

module.exports = DiscordTicket;